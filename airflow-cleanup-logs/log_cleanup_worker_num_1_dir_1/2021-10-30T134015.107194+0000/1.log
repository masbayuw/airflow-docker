[2021-10-30 13:40:20,653] {taskinstance.py:851} INFO - Dependencies all met for <TaskInstance: airflow-cleanup-logs.log_cleanup_worker_num_1_dir_1 2021-10-30T13:40:15.107194+00:00 [queued]>
[2021-10-30 13:40:20,703] {taskinstance.py:851} INFO - Dependencies all met for <TaskInstance: airflow-cleanup-logs.log_cleanup_worker_num_1_dir_1 2021-10-30T13:40:15.107194+00:00 [queued]>
[2021-10-30 13:40:20,706] {taskinstance.py:1042} INFO - 
--------------------------------------------------------------------------------
[2021-10-30 13:40:20,706] {taskinstance.py:1043} INFO - Starting attempt 1 of 2
[2021-10-30 13:40:20,712] {taskinstance.py:1044} INFO - 
--------------------------------------------------------------------------------
[2021-10-30 13:40:20,772] {taskinstance.py:1063} INFO - Executing <Task(BashOperator): log_cleanup_worker_num_1_dir_1> on 2021-10-30T13:40:15.107194+00:00
[2021-10-30 13:40:20,806] {standard_task_runner.py:76} INFO - Running: ['airflow', 'tasks', 'run', 'airflow-cleanup-logs', 'log_cleanup_worker_num_1_dir_1', '2021-10-30T13:40:15.107194+00:00', '--job-id', '54148', '--pool', 'default_pool', '--raw', '--subdir', 'DAGS_FOLDER/airflow-cleanup-logs.py', '--cfg-path', '/tmp/tmpmsibb62j', '--error-file', '/tmp/tmpqba6jffs']
[2021-10-30 13:40:20,812] {standard_task_runner.py:77} INFO - Job 54148: Subtask log_cleanup_worker_num_1_dir_1
[2021-10-30 13:40:20,800] {standard_task_runner.py:52} INFO - Started process 2408 to run task
[2021-10-30 13:40:20,969] {logging_mixin.py:104} INFO - Running <TaskInstance: airflow-cleanup-logs.log_cleanup_worker_num_1_dir_1 2021-10-30T13:40:15.107194+00:00 [running]> on host f8e9f518f089
[2021-10-30 13:40:21,121] {taskinstance.py:1257} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_EMAIL=bwiratmo91@gmail.com
AIRFLOW_CTX_DAG_OWNER=bayu
AIRFLOW_CTX_DAG_ID=airflow-cleanup-logs
AIRFLOW_CTX_TASK_ID=log_cleanup_worker_num_1_dir_1
AIRFLOW_CTX_EXECUTION_DATE=2021-10-30T13:40:15.107194+00:00
AIRFLOW_CTX_DAG_RUN_ID=manual__2021-10-30T13:40:15.107194+00:00
[2021-10-30 13:40:21,128] {bash.py:135} INFO - Tmp dir root location: 
 /tmp
[2021-10-30 13:40:21,131] {bash.py:158} INFO - Running command: 

echo "Getting Configurations..."
BASE_LOG_FOLDER="/opt/airflow/logs/scheduler"
WORKER_SLEEP_TIME="3"

sleep ${WORKER_SLEEP_TIME}s

MAX_LOG_AGE_IN_DAYS=""
if [ "${MAX_LOG_AGE_IN_DAYS}" == "" ]; then
    echo "maxLogAgeInDays conf variable isn't included. Using Default '0'."
    MAX_LOG_AGE_IN_DAYS='0'
fi
ENABLE_DELETE=true
echo "Finished Getting Configurations"
echo ""

echo "Configurations:"
echo "BASE_LOG_FOLDER:      '${BASE_LOG_FOLDER}'"
echo "MAX_LOG_AGE_IN_DAYS:  '${MAX_LOG_AGE_IN_DAYS}'"
echo "ENABLE_DELETE:        '${ENABLE_DELETE}'"

cleanup() {
    echo "Executing Find Statement: $1"
    FILES_MARKED_FOR_DELETE=`eval $1`
    echo "Process will be Deleting the following File(s)/Directory(s):"
    echo "${FILES_MARKED_FOR_DELETE}"
    echo "Process will be Deleting `echo "${FILES_MARKED_FOR_DELETE}" |     grep -v '^$' | wc -l` File(s)/Directory(s)"         # "grep -v '^$'" - removes empty lines.
    # "wc -l" - Counts the number of lines
    echo ""
    if [ "${ENABLE_DELETE}" == "true" ];
    then
        if [ "${FILES_MARKED_FOR_DELETE}" != "" ];
        then
            echo "Executing Delete Statement: $2"
            eval $2
            DELETE_STMT_EXIT_CODE=$?
            if [ "${DELETE_STMT_EXIT_CODE}" != "0" ]; then
                echo "Delete process failed with exit code                     '${DELETE_STMT_EXIT_CODE}'"

                echo "Removing lock file..."
                rm -f /tmp/airflow_log_cleanup_worker.lock
                if [ "${REMOVE_LOCK_FILE_EXIT_CODE}" != "0" ]; then
                    echo "Error removing the lock file.                     Check file permissions.                    To re-run the DAG, ensure that the lock file has been                     deleted (/tmp/airflow_log_cleanup_worker.lock)."
                    exit ${REMOVE_LOCK_FILE_EXIT_CODE}
                fi
                exit ${DELETE_STMT_EXIT_CODE}
            fi
        else
            echo "WARN: No File(s)/Directory(s) to Delete"
        fi
    else
        echo "WARN: You're opted to skip deleting the File(s)/Directory(s)!!!"
    fi
}


if [ ! -f /tmp/airflow_log_cleanup_worker.lock ]; then

    echo "Lock file not found on this node!     Creating it to prevent collisions..."
    touch /tmp/airflow_log_cleanup_worker.lock
    CREATE_LOCK_FILE_EXIT_CODE=$?
    if [ "${CREATE_LOCK_FILE_EXIT_CODE}" != "0" ]; then
        echo "Error creating the lock file.         Check if the airflow user can create files under tmp directory.         Exiting..."
        exit ${CREATE_LOCK_FILE_EXIT_CODE}
    fi

    echo ""
    echo "Running Cleanup Process..."

    FIND_STATEMENT="find ${BASE_LOG_FOLDER}/*/* -type f -mtime      +${MAX_LOG_AGE_IN_DAYS}"
    DELETE_STMT="${FIND_STATEMENT} -exec rm -f {} \;"

    cleanup "${FIND_STATEMENT}" "${DELETE_STMT}"
    CLEANUP_EXIT_CODE=$?

    FIND_STATEMENT="find ${BASE_LOG_FOLDER}/*/* -type d -empty"
    DELETE_STMT="${FIND_STATEMENT} -prune -exec rm -rf {} \;"

    cleanup "${FIND_STATEMENT}" "${DELETE_STMT}"
    CLEANUP_EXIT_CODE=$?

    FIND_STATEMENT="find ${BASE_LOG_FOLDER}/* -type d -empty"
    DELETE_STMT="${FIND_STATEMENT} -prune -exec rm -rf {} \;"

    cleanup "${FIND_STATEMENT}" "${DELETE_STMT}"
    CLEANUP_EXIT_CODE=$?

    echo "Finished Running Cleanup Process"

    echo "Deleting lock file..."
    rm -f /tmp/airflow_log_cleanup_worker.lock
    REMOVE_LOCK_FILE_EXIT_CODE=$?
    if [ "${REMOVE_LOCK_FILE_EXIT_CODE}" != "0" ]; then
        echo "Error removing the lock file. Check file permissions. To re-run the DAG, ensure that the lock file has been deleted (/tmp/airflow_log_cleanup_worker.lock)."
        exit ${REMOVE_LOCK_FILE_EXIT_CODE}
    fi

else
    echo "Another task is already deleting logs on this worker node.     Skipping it!"
    echo "If you believe you're receiving this message in error, kindly check     if /tmp/airflow_log_cleanup_worker.lock exists and delete it."
    exit 0
fi

[2021-10-30 13:40:21,152] {bash.py:169} INFO - Output:
[2021-10-30 13:40:21,155] {bash.py:173} INFO - Getting Configurations...
[2021-10-30 13:40:24,165] {bash.py:173} INFO - maxLogAgeInDays conf variable isn't included. Using Default '0'.
[2021-10-30 13:40:24,165] {bash.py:173} INFO - Finished Getting Configurations
[2021-10-30 13:40:24,166] {bash.py:173} INFO - 
[2021-10-30 13:40:24,166] {bash.py:173} INFO - Configurations:
[2021-10-30 13:40:24,166] {bash.py:173} INFO - BASE_LOG_FOLDER:      '/opt/airflow/logs/scheduler'
[2021-10-30 13:40:24,167] {bash.py:173} INFO - MAX_LOG_AGE_IN_DAYS:  '0'
[2021-10-30 13:40:24,168] {bash.py:173} INFO - ENABLE_DELETE:        'true'
[2021-10-30 13:40:24,169] {bash.py:173} INFO - Lock file not found on this node!     Creating it to prevent collisions...
[2021-10-30 13:40:24,175] {bash.py:173} INFO - 
[2021-10-30 13:40:24,176] {bash.py:173} INFO - Running Cleanup Process...
[2021-10-30 13:40:24,177] {bash.py:173} INFO - Executing Find Statement: find /opt/airflow/logs/scheduler/*/* -type f -mtime      +0
[2021-10-30 13:40:24,568] {bash.py:173} INFO - Process will be Deleting the following File(s)/Directory(s):
[2021-10-30 13:40:24,570] {bash.py:173} INFO - 
[2021-10-30 13:40:24,619] {bash.py:173} INFO - Process will be Deleting 0 File(s)/Directory(s)
[2021-10-30 13:40:24,627] {bash.py:173} INFO - 
[2021-10-30 13:40:24,628] {bash.py:173} INFO - WARN: No File(s)/Directory(s) to Delete
[2021-10-30 13:40:24,632] {bash.py:173} INFO - Executing Find Statement: find /opt/airflow/logs/scheduler/*/* -type d -empty
[2021-10-30 13:40:24,988] {bash.py:173} INFO - Process will be Deleting the following File(s)/Directory(s):
[2021-10-30 13:40:24,988] {bash.py:173} INFO - 
[2021-10-30 13:40:24,996] {bash.py:173} INFO - Process will be Deleting 0 File(s)/Directory(s)
[2021-10-30 13:40:24,996] {bash.py:173} INFO - 
[2021-10-30 13:40:24,998] {bash.py:173} INFO - WARN: No File(s)/Directory(s) to Delete
[2021-10-30 13:40:25,001] {bash.py:173} INFO - Executing Find Statement: find /opt/airflow/logs/scheduler/* -type d -empty
[2021-10-30 13:40:25,080] {bash.py:173} INFO - Process will be Deleting the following File(s)/Directory(s):
[2021-10-30 13:40:25,082] {bash.py:173} INFO - 
[2021-10-30 13:40:25,084] {bash.py:173} INFO - Process will be Deleting 0 File(s)/Directory(s)
[2021-10-30 13:40:25,084] {bash.py:173} INFO - 
[2021-10-30 13:40:25,085] {bash.py:173} INFO - WARN: No File(s)/Directory(s) to Delete
[2021-10-30 13:40:25,085] {bash.py:173} INFO - Finished Running Cleanup Process
[2021-10-30 13:40:25,085] {bash.py:173} INFO - Deleting lock file...
[2021-10-30 13:40:25,091] {bash.py:177} INFO - Command exited with return code 0
[2021-10-30 13:40:25,124] {taskinstance.py:1166} INFO - Marking task as SUCCESS. dag_id=airflow-cleanup-logs, task_id=log_cleanup_worker_num_1_dir_1, execution_date=20211030T134015, start_date=20211030T134020, end_date=20211030T134025
[2021-10-30 13:40:25,481] {taskinstance.py:1220} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2021-10-30 13:40:25,535] {local_task_job.py:146} INFO - Task exited with return code 0
